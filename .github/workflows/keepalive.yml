name: Keepalive Workflow

on:
  schedule:
    - cron: "0 10 1 * *" # 每月1号 10:00 UTC 

  workflow_dispatch: # 手动触发
    inputs:
      tags:
        description: 'Just for a test!'
        required: true
        default: 'test'
        type: string

jobs:
  keepalive:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许推送代码
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
          
      - name: Update keepalive timestamp
        run: | #将文件 .keepalive 修改为现在时间push上去
          date > .keepalive   
          git config user.name "keepalive[bot]"
          git config user.email "keepalive@keepalive.bot.com"
          git add .keepalive
          git commit -m "chore: keepalive commit $(date -u +"%Y-%m-%dT%H:%M:%SZ")" || echo "No changes to commit"
          git push
          
  verify:
    runs-on: ubuntu-latest
    needs: keepalive
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 #默认会检出触发 workflow 的那个 commit 而不是 keepalive push的仓库
        with:
          ref: refs/heads/${{ github.ref_name }}   # 强制拉取分支最新状态
      - name: verify
        run: |
          RECENT_TIME=$(git log -1 --format=%cr)
          echo "RECENT_TIME=$RECENT_TIME" >> $GITHUB_ENV

          # 获取最新提交时间 （keepalive[bot]提交的时候默认是UTC时间）
          LATEST_TIME=$(git log -1 --format=%cI)
          echo "LATEST_TIME=$LATEST_TIME"
          
          # 提取 LATEST_TIME 的日期部分
          LATEST_DATE=${LATEST_TIME:0:10}
          echo "LATEST_DATE=$LATEST_DATE"
          
          # 获取今天日期（本地时间UTC）
          TODAY=$(date +%Y-%m-%d)
          echo "TODAY=$TODAY"

          # 判断是否为今天
          if [ "$LATEST_DATE" = "$TODAY" ]; then
              echo "VERIFY_SUCCESS=YES" >> $GITHUB_ENV
              echo "keepalive success!"
          else
              echo "VERIFY_SUCCESS=NO" >> $GITHUB_ENV
              echo "keepalive fail!"
          fi
          
          COMMIT_INFO=$(git log -1 --format="Author: %an <%ae>%nDate: %ad%nMessage: %s")
          echo "COMMIT_INFO<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_INFO" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: send2telegram
        uses: metalpoch/telegram-alerts-action@v1
        with:
          bot-token-id: ${{ secrets.TG_BOT_TOKEN }}
          chat-id: ${{ secrets.TG_USER_ID }}
          text: |
            🎉是否成功提交：${{ env.VERIFY_SUCCESS }}
            📅提交时间：${{ env.RECENT_TIME }}
            ${{ env.COMMIT_INFO }}
          parse-mode: HTML
          disable-notification: true
          disable-web-page-preview: true
          
# token: ${{ secrets.TG_BOT_TOKEN }}
# chatid: ${{ secrets.TG_USER_ID }}
